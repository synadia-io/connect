// Code generated by github.com/atombender/go-jsonschema, DO NOT EDIT.

package model

import "encoding/json"
import "fmt"

type ConnectorInstancesRequest struct {
	// The id of the connector to get instances for
	ConnectorId *string `json:"connector_id,omitempty" yaml:"connector_id,omitempty" mapstructure:"connector_id,omitempty"`
}

type ConnectorInstancesResponse struct {
	// The instances of the connector
	Instances []Instance `json:"instances" yaml:"instances" mapstructure:"instances"`
}

// UnmarshalJSON implements json.Unmarshaler.
func (j *ConnectorInstancesResponse) UnmarshalJSON(value []byte) error {
	var raw map[string]interface{}
	if err := json.Unmarshal(value, &raw); err != nil {
		return err
	}
	if _, ok := raw["instances"]; raw != nil && !ok {
		return fmt.Errorf("field instances in ConnectorInstancesResponse: required")
	}
	type Plain ConnectorInstancesResponse
	var plain Plain
	if err := json.Unmarshal(value, &plain); err != nil {
		return err
	}
	*j = ConnectorInstancesResponse(plain)
	return nil
}
