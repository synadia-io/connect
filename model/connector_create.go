// Code generated by github.com/atombender/go-jsonschema, DO NOT EDIT.

package model

import "encoding/json"
import "fmt"

type ConnectorCreateRequest struct {
	// A description of the connector
	Description string `json:"description" yaml:"description" mapstructure:"description"`

	// The id of the connector to create
	Id string `json:"id" yaml:"id" mapstructure:"id"`

	// The image to run
	Image string `json:"image" yaml:"image" mapstructure:"image"`

	// Metrics corresponds to the JSON schema field "metrics".
	Metrics *Metrics `json:"metrics,omitempty" yaml:"metrics,omitempty" mapstructure:"metrics,omitempty"`

	// Steps corresponds to the JSON schema field "steps".
	Steps Steps `json:"steps" yaml:"steps" mapstructure:"steps"`
}

// UnmarshalJSON implements json.Unmarshaler.
func (j *ConnectorCreateRequest) UnmarshalJSON(value []byte) error {
	var raw map[string]interface{}
	if err := json.Unmarshal(value, &raw); err != nil {
		return err
	}
	if _, ok := raw["description"]; raw != nil && !ok {
		return fmt.Errorf("field description in ConnectorCreateRequest: required")
	}
	if _, ok := raw["id"]; raw != nil && !ok {
		return fmt.Errorf("field id in ConnectorCreateRequest: required")
	}
	if _, ok := raw["image"]; raw != nil && !ok {
		return fmt.Errorf("field image in ConnectorCreateRequest: required")
	}
	if _, ok := raw["steps"]; raw != nil && !ok {
		return fmt.Errorf("field steps in ConnectorCreateRequest: required")
	}
	type Plain ConnectorCreateRequest
	var plain Plain
	if err := json.Unmarshal(value, &plain); err != nil {
		return err
	}
	*j = ConnectorCreateRequest(plain)
	return nil
}

type ConnectorCreateResponse struct {
	// The created connector
	Connector Connector `json:"connector" yaml:"connector" mapstructure:"connector"`

	// the revision
	Revision int `json:"revision" yaml:"revision" mapstructure:"revision"`
}

// UnmarshalJSON implements json.Unmarshaler.
func (j *ConnectorCreateResponse) UnmarshalJSON(value []byte) error {
	var raw map[string]interface{}
	if err := json.Unmarshal(value, &raw); err != nil {
		return err
	}
	if _, ok := raw["connector"]; raw != nil && !ok {
		return fmt.Errorf("field connector in ConnectorCreateResponse: required")
	}
	if _, ok := raw["revision"]; raw != nil && !ok {
		return fmt.Errorf("field revision in ConnectorCreateResponse: required")
	}
	type Plain ConnectorCreateResponse
	var plain Plain
	if err := json.Unmarshal(value, &plain); err != nil {
		return err
	}
	*j = ConnectorCreateResponse(plain)
	return nil
}
